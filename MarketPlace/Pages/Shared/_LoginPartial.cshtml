@using Microsoft.AspNetCore.Identity
@using MarketPlace.Models
@using MarketPlace.Data

@inject SignInManager<RegisteredUser> SignInManager
@inject UserManager<RegisteredUser> UserManager
@inject MarketPlaceDbContext DbContext;

@{
    var user = await UserManager.GetUserAsync(User);
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{   
    <li class="nav-item">
            <a id="manage" class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Signed in as @UserManager.GetUserName(User)</a>
    </li>
    <li class="nav-item">
                <a class="nav-link text-light" asp-area="" asp-page="/Index" asp-route-userId="@user.Id">Watchlist(@DbContext.UsersProductsWatchlist.Where(p => p.RegisteredUserId == user.Id).Count())</a>
    </li>
    <li class="nav-item">
          <div class="nav-link text-success">Balance: @(Math.Round(user.Balance, 2))$</div>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-light">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-light" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-light" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
